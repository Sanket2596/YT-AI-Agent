// This is the file where we will create, display, delete and get/retrieve those chats that are generated by specific authenticated user only
import { mutation, query } from "./_generated/server";
import {v} from "convex/values";


// Purpose of using v.id -> using the v.id validator like in the example above to make sure you are not exposing data from tables other than the ones you intended.
export const createChat = mutation({
    args: {
        title: v.string(),
    },
    handler: async (ctx, args) => {
        const identity = await ctx.auth.getUserIdentity();
        if(!identity) {
            throw new Error("Unauthorized");
        }

        const chat = await ctx.db.insert("chats", {
            title: args.title,
            userId: identity.subject,
            createdAt: Date.now(),
        })

        return chat;
    }
});

// Function for displaying chats that user has entered before
export const listChats = query({
    handler: async (ctx) => {
      const identity = await ctx.auth.getUserIdentity();
      console.log(identity);
      if (!identity) {
        throw new Error("Not authenticated");
      }
  
      const chats = await ctx.db
        .query("chats")
        .withIndex("by_user", (q) => q.eq("userId", identity.subject))
        .order("desc")
        .collect();
  
      return chats;
    },
  });

export const deleteChat = mutation({
    args: {
        id: v.id("chats"),
    },
    handler: async (ctx, args) => {
        const identity = await ctx.auth.getUserIdentity();
        if(!identity) {
            throw new Error("Unauthorized");
        }
        const chat = await ctx.db.get(args.id);
        if (!chat || chat.userId !== identity.subject) {
            throw new Error("Chat not found");
        }
        // Delete all the messages in the chat
        const messages = await ctx.db
        .query("messages")
        .withIndex("by_chat", (q) => q.eq("chatId", args.id))
        .collect();
    
        for (const message of messages) {
            await ctx.db.delete(message._id);
        }

        // Delete the chat
        await ctx.db.delete(args.id);
    }  
})